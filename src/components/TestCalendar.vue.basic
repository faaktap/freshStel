<template>
  <v-row>
    <v-col>
    <v-sheet
      tile
      height="54"
      class="d-flex"
    >      
        <v-btn
        icon
        class="ma-2"
        @click="$refs.calendar.prev()"
        >
        <v-icon>mdi-chevron-left</v-icon>
        </v-btn>
        <v-spacer />
        <v-btn icon
               class="ma-2"
              @click="$refs.calendar.next()"
        >
          <v-icon>mdi-chevron-right</v-icon>
        </v-btn>
    </v-sheet>
      <v-sheet height="400">
        <v-calendar
          ref="calendar"
          v-model="calValue"
          :now="calToday"
          :value="calToday"
          :events="events"
          color="primary"
          type="week"
          intervalMinutes="60"
          first-interval="7"
          interval-count="10"
          :interval-format="intervalFormat"
        >
         <template v-slot:day-body="{ date, week }">
            <div
              class="v-current-time"
              :class="{ first: date === week[0].date }"
              :style="{ top: nowY }"
            ></div>
         </template>

        </v-calendar>
      </v-sheet>
      v-model(calValue) = {{ calValue }} <br>
      calToday = {{ calToday }} <br>
      
    </v-col>
  </v-row>
</template>

<script>
//import { format         ,lastDayOfMonth        , addYears } from 'date-fns'
import { zDate } from '@/api/zDate.js'
export default {
    data: () => ({
      
      today: null,
      calToday: null,
      calValue: '',
      calReady: false,
      events: [
        {
          name: 'Weekly Meeting',
          start: '2021-03-07 09:00',
          end: '2021-03-07 10:00',
        },
        {
          name: `Thomas' Birthday`,
          start: '2021-03-10',
        },
        {
          name: 'Mash Potatoes',
          start: '2021-03-09 12:30',
          end: '2021-03-09 15:30',
        },
      ],
    }),
    methods:{
      //intervalFormat(interval) {
      intervalFormat(i) {
            //const longOptions = { timeZone: 'UTC', hour12: true, hour: '2-digit', minute: '2-digit' }
            //const shortOptions = { timeZone: 'UTC', hour12: true, hour: 'numeric', minute: '2-digit' }
            //const shortHourOptions = { timeZone: 'UTC', hour12: true, hour: 'numeric' }
            //console.log(i)
            return i.hour - 7  //{ timeZone: 'UTC', hour12: true, hour: 'numeric' }
      },
      getCurrentTime () {
        return this.cal ? this.cal.times.now.hour * 60 + this.cal.times.now.minute : 0
      },
      scrollToTime () {
        const time = this.getCurrentTime()
        const first = Math.max(0, time - (time % 30) - 30)

        this.cal.scrollToTime(first)
      },
      updateTime () {
        setInterval(() => this.cal.updateTimes(), 60 * 1000)
      },
    },
    computed: {
      cal () {
        return this.calReady ? this.$refs.calendar : null
      },
      nowY () {
        return this.cal ? this.cal.timeToY(this.cal.times.now) + 'px' : '-10px'
      },
    },    
    mounted () {
    //var result = zDate.format(    new Date(2014, 0, 11),    'yyyy/MM/dd'    ) 
    //console.log('Result: ',result);

      this.events = []
      this.today = new Date()

      console.log('hollies: ' , zDate.publicHolidays)

      zDate.publicHolidays.forEach(xx => {
         const evt= {name: xx.title
                  , start: zDate.format(xx.date,'yyyy-MM-dd')
                    }
         this.events.push(evt)
      })

      console.log('1',this.today)
      let lastDayOfMonth = zDate.lastDayOfMonth(this.today)
      let fToday = zDate.format(this.today,'yyyy/MM/dd'  )  
      const formattedDate = zDate.format(this.today, 'PPPP');
      let fiveYyearsAlong = zDate.addYears(this.today,5)
      console.log( 'formatdiration : ',   zDate.formatDuration ({ days: 141,    hours: 5}))             
      let days3 = zDate.add(this.today, {days:3, minutes:60})
      console.log('ENDENDEND', lastDayOfMonth, fToday, formattedDate, fiveYyearsAlong, days3)

      this.calToday = zDate.format(this.today,'yyyy-MM-dd') 
      let startOfYear = zDate.startOfYear(this.today)

      let dayCnt = 1
      //Kan jy my sÃª watter skooldag is vandag? (11/03/2021) - Dag 10 sir.      
      for (let i=1; i< 390; i++) {
         const dayX = zDate.add(startOfYear, {days:i})
         if (zDate.isWeekend(dayX)) {
             console.log('isWeekend xxxxx', dayX)
             continue
         } 
         if (zDate.isPublicHoliday(dayX)) {
             console.log('public holiday xxxxx', dayX)
             continue
         } 
         const evt= {name: 'day' + dayCnt
                  , start: zDate.format(dayX,'yyyy-MM-dd')
                    }
         this.events.push(evt)
         dayCnt = dayCnt + 1
         if (dayCnt == 11 ) dayCnt = 1;
      }
      console.log(this.events)
      console.log(this.$refs.calendar)
      this.calReady = true
      this.scrollToTime()
      this.updateTime()

    },
  }
</script>